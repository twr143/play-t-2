# https://www.playframework.com/documentation/latest/Configuration
play.http.secret.key = "test"
## Modules
# https://www.playframework.com/documentation/latest/Modules
# ~~~~~
# Control which modules are loaded when Play starts.  Note that modules are
# the replacement for "GlobalSettings", which are deprecated in 2.5.x.
# Please see https://www.playframework.com/documentation/latest/GlobalSettings
# for more information.
#
# You can also extend Play functionality by using one of the publically available
# Play modules: https://playframework.com/documentation/latest/ModuleDirectory
play.modules {
    # By default, Play will load any class called Module that is defined
    # in the root package (the "app" directory), or you can define them
    # explicitly below.
    # If there are any built-in modules that you want to disable, you can list them here.
    enabled += MainModule
    # If there are any built-in modules that you want to disable, you can list them here.
    #disabled += ""
    #disabled += "play.api.db.DBModule"
}
user.addtitionalgreet = "Шпашыбо што жашол!"
user.showAdditionalGreet = true

play.server {
    http {
        port = disabled
    }
    https {

        # The HTTPS port of the server.
        port = 9443

        # The interface address to bind to
        address = "0.0.0.0"
        address = ${?https.address}

        # The idle timeout for an open connection after which it will be closed
        # Set to null or "infinite" to disable the timeout, but notice that this
        # is not encouraged since timeout are important mechanisms to protect your
        # servers from malicious attacks or programming mistakes.
        idleTimeout = ${play.server.http.idleTimeout}

        # The SSL engine provider
        engineProvider = "play.core.server.ssl.DefaultSSLEngineProvider"
        //      engineProvider = ${?play.http.sslengineprovider}

        # HTTPS keystore configuration, used by the default SSL engine provider
        keyStore {
            # The path to the keystore
            path = "conf/localhostAlias.jks"

            # The type of the keystore
            type = "JKS"

            # The password for the keystore
            password = "passwo"

            # The algorithm to use. If not set, uses the platform default algorithm.
            algorithm = "SunX509"
        }

        # HTTPS truststore configuration
        trustStore {

            # If true, does not do CA verification on client side certificates
            noCaVerification = false
        }

        # Whether JSSE want client auth mode should be used. This means, the server
        # will request a client certificate, but won't fail if one isn't provided.
        wantClientAuth = false

        # Whether JSSE need client auth mode should be used. This means, the server
        # will request a client certificate, and will fail and terminate the session
        # if one isn't provided.
        needClientAuth = false
    }

}
play.filters {
    cors {
        # Filter paths by a whitelist of path prefixes
        pathPrefixes = ["/"]
        # The allowed HTTP methods. If null, all methods are allowed
        allowedHttpMethods = ["GET", "POST", "DELETE", "PUT", "OPTIONS"]
        allowedHttpHeaders = ["Accept", "Content-Type", "User-Agent", "Authorization", "Id-Token", "If-Modified-Since",
            "Cache-Control", "X-Frame-Options", "X-Content-Type-Options", "X-SS-Protection", "Origin"]
    }
    headers{
        contentSecurityPolicy = "default-src 'self' 'unsafe-inline'"
    }
}
